{"version":3,"sources":["placid.js","placidCtrl.js","placidService.js","directives/aboutDir.js","directives/allPostsDir.js","directives/responsesDir.js","directives/singlePostDir.js","directives/submitDir.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","template","when","otherwise","controller","$scope","placidService","$state","service","$http","$q","this","testPost","postObj","console","log","method","data","postToDB","getThesesWId","getPost","id","getLinkContext","directive","templateUrl","restrict","scope","fetchMessage","then","result","theses","params","getDomainName","test","split","length","slice","indexOf","post","link","linkAnalysis","determination","isHidden","JSON","stringify","prop","catch","fixes"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module(\"placid\",[\"ui.router\"]).config([\"$stateProvider\",\"$urlRouterProvider\",function($stateProvider,$urlRouterProvider) {\n\n  $stateProvider.state(\"posts\",{\n    url:\"/posts\",\n    template:\"<all-posts-dir></all-posts-dir>\"\n  }).state(\"about\",{\n    url:\"/about\",\n    template:\"<about-dir></about-dir>\"\n  }).state(\"submit\",{\n    url:\"/submit/:id\",\n    template:\"<submit-dir></submit-dir>\"\n  }).state(\"post\",{\n    url:\"/post/:id\",\n    template:\"<single-post-dir></single-post-dir>\"\n  });\n\n  $urlRouterProvider.when(\"/\", \"/posts\");\n  $urlRouterProvider.otherwise(\"/posts\");\n\n}])\n","angular.module(\"placid\").controller(\"placidCtrl\",[\"$scope\",\"placidService\",\"$state\",function($scope,placidService,$state){\n  \n}])\n","angular.module(\"placid\").service(\"placidService\",[\"$http\",\"$q\",function($http,$q){\n\n  this.testPost = (postObj) => {\n    console.log(postObj)\n    return $http({\n      url:\"http://localhost:3000/submit\",\n      method:\"POST\",\n      data:postObj\n    })\n  }\n\n  this.postToDB = (postObj) => {\n    return $http({\n      url:\"http://localhost:3000/database\",\n      method:\"POST\",\n      data:postObj\n    })\n  }\n\n  this.getThesesWId = (postObj) => {\n    return $http({\n      url:\"http://localhost:3000/theses\",\n      method:\"GET\",\n    })\n  }\n\n  this.getPost = (id) => {\n    return $http({\n      url:\"http://localhost:3000/post/\" + id,\n      method:\"GET\",\n    })\n  }\n\n  this.getLinkContext = (url) => {\n    return $http({\n      url:\"http://localhost:3000/link\",\n      method:\"PUT\",\n      data:{\"url\":url}\n    })\n  }\n\n}])\n","angular.module(\"placid\").directive(\"aboutDir\",function(){\n  return{\n    templateUrl:\"./views/aboutDTemplate.html\",\n    restrict:\"E\",\n    scope:{}\n  }\n})\n","angular.module(\"placid\").directive(\"allPostsDir\",function(){\n  return{\n    templateUrl:\"./views/allPostsDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n    controller:[\"$scope\",\"placidService\",function($scope,placidService){\n      var getThesesWId = () => {\n        $scope.fetchMessage = \"fetching posts :)\"\n        placidService.getThesesWId().then((result)=>{\n          $scope.fetchMessage = \"\";\n          $scope.theses = result.data;\n          //console.log($scope.theses)\n        })\n      };\n      getThesesWId();\n    }]\n  }\n})\n","angular.module(\"placid\").directive(\"responses\",[function(){\n  return{\n    templateUrl:\"./views/responsesDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n  }\n}])\n","angular.module(\"placid\").directive(\"singlePostDir\",[function(){\n  return{\n    templateUrl:\"./views/singlePostDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n    controller:[\"$scope\",\"$state\",\"placidService\",function($scope,$state,placidService){\n\n      $scope.id = $state.params.id\n\n      let getDomainName = (url) => {\n\n        var test = url.split(\"//\")\n        if(test.length > 1 && test[0][0]===\"h\" && test[1][0] !== \"w\") {\n          var rStr = url.split(\"//\")[1].split(\"/\")[0]\n          return rStr\n        }\n        if(test.length > 1 && test[1][0]===\"w\") {\n          var pArray = test[1].split(\"/\")\n          var rHWStr = pArray[0]\n          return rHWStr\n        }\n        if(test.length === 1 && url[0] != \"w\"){\n          var rSStr = url.slice(0,url.indexOf(\"/\"))\n          return rSStr\n        }\n        else {\n          var wArray = url.split(\"/\")\n          var rwStr = wArray[0]\n          return rwStr\n        }\n      }\n\n      let getPost = () => {\n        placidService.getPost($state.params.id).then(result=>{\n          $scope.post = result.data\n          $scope.link = getDomainName(result.data.link)\n          //console.log($scope.post)\n          placidService.getLinkContext(result.data.link).then(result=>{\n            console.log(result)\n            $scope.linkAnalysis = result.data\n          })\n        })\n      }\n      getPost()\n    }]\n  }\n}])\n","angular.module(\"placid\").directive(\"submitDir\",[function(){\n  return{\n    templateUrl:\"./views/submitDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n    controller:[\"$scope\",\"$state\",\"placidService\",function($scope,$state,placidService){\n\n\n\n      $scope.determination = \"\"\n\n      $scope.testPost = () => {\n        $scope.isHidden = false\n        $scope.determination = \"robots are reading your post\"\n\n        if($state.params.id) $scope.post.id = $state.params.id\n\n        placidService.testPost($scope.post).then(result=>{\n          $scope.determination = \"\"\n          console.log(JSON.stringify($scope.post, null, 2) + \"here\")\n          if(result.data === \"checking your submission against our database\"){\n            $scope.determination = result.data\n\n            placidService.postToDB($scope.post).then(result=>{\n              $scope.determination = result.data\n              $scope.isHidden = true\n              for (let prop in $scope.post){\n                $scope.post[prop] = \"\"\n              }\n            }).catch((result)=>{\n              $scope.determination = result.data\n              $scope.isHidden = true\n            })\n          }\n          else {\n            $scope.determination = \"Watson is kinda sensitive...\"\n            $scope.fixes = result.data\n          }\n        })\n      }\n    }],\n  }\n}])\n"]}