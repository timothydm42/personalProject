{"version":3,"sources":["placid.js","placidCtrl.js","placidService.js","directives/aboutDir.js","directives/allPostsDir.js","directives/singlePostDir.js","directives/submitDir.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","template","when","otherwise","controller","$scope","placidService","$state","service","$http","$q","this","testPost","postObj","console","log","method","data","getThesesWId","getPost","id","directive","templateUrl","restrict","scope","then","result","theses","getDomainName","test","split","length","slice","indexOf","params","post","link","determination","isHidden","prop","fixes"],"mappings":"YAAAA,SAAQC,OAAO,UAAU,cAAcC,QAAQ,iBAAiB,qBAAqB,SAASC,EAAeC,GAE3GD,EAAeE,MAAM,SACnBC,IAAI,SACJC,SAAS,oCACRF,MAAM,SACPC,IAAI,SACJC,SAAS,4BACRF,MAAM,UACPC,IAAI,UACJC,SAAS,8BACRF,MAAM,QACPC,IAAI,YACJC,SAAS,wCAGXH,EAAmBI,KAAK,IAAK,UAC7BJ,EAAmBK,UAAU,aCjB/BT,QAAQC,OAAO,UAAUS,WAAW,cAAc,SAAS,gBAAgB,SAAS,SAASC,EAAOC,EAAcC,OCAlHb,QAAQC,OAAO,UAAUa,QAAQ,iBAAiB,QAAQ,KAAK,SAASC,EAAMC,GAE5EC,KAAKC,SAAW,SAACC,GAEf,MADAC,SAAQC,IAAIF,GACLJ,GACLT,IAAI,+BACJgB,OAAO,OACPC,KAAKJ,KAITF,KAAKO,aAAe,SAACL,GACnB,MAAOJ,IACLT,IAAI,+BACJgB,OAAO,SAIXL,KAAKQ,QAAU,SAACC,GACd,MAAOX,IACLT,IAAI,8BAAgCoB,EACpCJ,OAAO,YCrBbtB,QAAQC,OAAO,UAAU0B,UAAU,WAAW,WAC5C,OACEC,YAAY,8BACZC,SAAS,IACTC,YCJJ9B,QAAQC,OAAO,UAAU0B,UAAU,cAAc,WAC/C,OACEC,YAAY,iCACZC,SAAS,IACTC,SACApB,YAAY,SAAS,gBAAgB,SAASC,EAAOC,IAChC,WACjBA,EAAcY,eAAeO,KAAK,SAACC,GACjCrB,EAAOsB,OAASD,EAAOT,eCRjCvB,QAAQC,OAAO,UAAU0B,UAAU,iBAAiB,WAClD,OACEC,YAAY,mCACZC,SAAS,IACTC,SACApB,YAAY,SAAS,SAAS,gBAAgB,SAASC,EAAOE,EAAOD,GAEnE,GAAIsB,GAAgB,SAAC5B,GAEnB,GAAI6B,GAAO7B,EAAI8B,MAAM,KACrB,IAAGD,EAAKE,OAAS,GAAkB,MAAbF,EAAK,GAAG,IAA2B,MAAfA,EAAK,GAAG,GAAY,CAE5D,MADW7B,GAAI8B,MAAM,MAAM,GAAGA,MAAM,KAAK,GAG3C,GAAGD,EAAKE,OAAS,GAAkB,MAAbF,EAAK,GAAG,GAAU,CAGtC,MAFaA,GAAK,GAAGC,MAAM,KACP,GAGtB,GAAmB,IAAhBD,EAAKE,QAA0B,KAAV/B,EAAI,GAAU,CAEpC,MADYA,GAAIgC,MAAM,EAAEhC,EAAIiC,QAAQ,MAMpC,MAFajC,GAAI8B,MAAM,KACJ,KAKT,WACZxB,EAAca,QAAQZ,EAAO2B,OAAOd,IAAIK,KAAK,SAACC,GAC5CrB,EAAO8B,KAAOT,EAAOT,KACrBZ,EAAO+B,KAAOR,EAAcF,EAAOT,KAAKmB,iBCjClD1C,QAAQC,OAAO,UAAU0B,UAAU,aAAa,WAC9C,OACEC,YAAY,+BACZC,SAAS,IACTC,SACApB,YAAY,SAAS,gBAAgB,SAASC,EAAOC,GACnDD,EAAOgC,cAAgB,GACvBhC,EAAOiC,UAAW,EAClBjC,EAAOO,SAAW,WAChBP,EAAOgC,cAAgB,+BACvB/B,EAAcM,SAASP,EAAO8B,MAAMV,KAAK,SAACC,GAExC,GADAZ,QAAQC,IAAIW,GACc,gBAAhBA,GAAOT,KAAkB,CACjCZ,EAAOgC,cAAgBX,EAAOT,KAC9BZ,EAAOiC,UAAW,CAClB,KAAK,GAAIC,KAAQlC,GAAO8B,KACtB9B,EAAO8B,KAAKI,GAAQ,OAItBlC,GAAOgC,cAAgB,4CACvBhC,EAAOmC,MAAQd,EAAOT","file":"bundle.js","sourcesContent":["angular.module(\"placid\",[\"ui.router\"]).config([\"$stateProvider\",\"$urlRouterProvider\",function($stateProvider,$urlRouterProvider) {\n\n  $stateProvider.state(\"posts\",{\n    url:\"/posts\",\n    template:\"<all-posts-dir></all-posts-dir>\"\n  }).state(\"about\",{\n    url:\"/about\",\n    template:\"<about-dir></about-dir>\"\n  }).state(\"submit\",{\n    url:\"/submit\",\n    template:\"<submit-dir></submit-dir>\"\n  }).state(\"post\",{\n    url:\"/post/:id\",\n    template:\"<single-post-dir></single-post-dir>\"\n  });\n\n  $urlRouterProvider.when(\"/\", \"/posts\");\n  $urlRouterProvider.otherwise(\"/posts\");\n\n}])\n","angular.module(\"placid\").controller(\"placidCtrl\",[\"$scope\",\"placidService\",\"$state\",function($scope,placidService,$state){\n  \n}])\n","angular.module(\"placid\").service(\"placidService\",[\"$http\",\"$q\",function($http,$q){\n\n  this.testPost = (postObj) => {\n    console.log(postObj)\n    return $http({\n      url:\"http://localhost:3000/submit\",\n      method:\"POST\",\n      data:postObj\n    })\n  };\n\n  this.getThesesWId = (postObj) => {\n    return $http({\n      url:\"http://localhost:3000/theses\",\n      method:\"GET\",\n    })\n  };\n\n  this.getPost = (id) => {\n    return $http({\n      url:\"http://localhost:3000/post/\" + id,\n      method:\"GET\",\n    })\n  }\n\n}])\n","angular.module(\"placid\").directive(\"aboutDir\",function(){\n  return{\n    templateUrl:\"./views/aboutDTemplate.html\",\n    restrict:\"E\",\n    scope:{}\n  }\n})\n","angular.module(\"placid\").directive(\"allPostsDir\",function(){\n  return{\n    templateUrl:\"./views/allPostsDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n    controller:[\"$scope\",\"placidService\",function($scope,placidService){\n      var getThesesWId = () => {\n        placidService.getThesesWId().then((result)=>{\n          $scope.theses = result.data;\n          //console.log($scope.theses)\n        })\n      };\n      getThesesWId();\n    }]\n  }\n})\n","angular.module(\"placid\").directive(\"singlePostDir\",[function(){\n  return{\n    templateUrl:\"./views/singlePostDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n    controller:[\"$scope\",\"$state\",\"placidService\",function($scope,$state,placidService){\n\n      let getDomainName = (url) => {\n\n        var test = url.split(\"//\");\n        if(test.length > 1 && test[0][0]===\"h\" && test[1][0] !== \"w\") {\n          var rStr = url.split(\"//\")[1].split(\"/\")[0];\n          return rStr;\n        }\n        if(test.length > 1 && test[1][0]===\"w\") {\n          var pArray = test[1].split(\"/\");\n          var rHWStr = pArray[0];\n          return rHWStr;\n        }\n        if(test.length === 1 && url[0] != \"w\"){\n          var rSStr = url.slice(0,url.indexOf(\"/\"));\n          return rSStr;\n        }\n        else {\n          var wArray = url.split(\"/\");\n          var rwStr = wArray[0];\n          return rwStr;\n        }\n      }\n\n      let getPost = () => {\n        placidService.getPost($state.params.id).then((result)=>{\n          $scope.post = result.data\n          $scope.link = getDomainName(result.data.link)\n          //console.log($scope.post)\n        })\n      }\n      getPost()\n    }]\n  }\n}])\n","angular.module(\"placid\").directive(\"submitDir\",[function(){\n  return{\n    templateUrl:\"./views/submitDTemplate.html\",\n    restrict:\"E\",\n    scope:{},\n    controller:[\"$scope\",\"placidService\",function($scope,placidService){\n      $scope.determination = \"\"\n      $scope.isHidden = false;\n      $scope.testPost = () => {\n        $scope.determination = \"robots are reading your post\"\n        placidService.testPost($scope.post).then((result)=>{\n          console.log(result);\n          if(typeof result.data === \"string\"){\n            $scope.determination = result.data\n            $scope.isHidden = true\n            for (let prop in $scope.post){\n              $scope.post[prop] = \"\"\n            }\n          }\n          else {\n            $scope.determination = \"Robots want you to address the following:\"\n            $scope.fixes = result.data\n          }\n        })\n      };\n    }],\n  }\n}])\n"]}